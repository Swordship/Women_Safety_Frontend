# Frontend Development Setup and Configuration

# 1. Create .env file in your React project root
cat > .env << EOF
# Backend API Configuration
REACT_APP_BACKEND_URL=http://localhost:8000/api
REACT_APP_USE_MOCK=true

# Development Settings
REACT_APP_ENV=development
REACT_APP_DEBUG=true

# Optional: Map Configuration (if using maps)
REACT_APP_MAPBOX_TOKEN=your-mapbox-token
REACT_APP_GOOGLE_MAPS_KEY=your-google-maps-key

# Feature Flags
REACT_APP_ENABLE_AI_FEATURES=true
REACT_APP_ENABLE_MOCK_MODE=true
EOF

# 2. Update your package.json with proxy and scripts
{
  "name": "empowerher-frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --host 0.0.0.0",
    "build": "vite build",
    "build:dev": "vite build --mode development",
    "lint": "eslint .",
    "preview": "vite preview",
    "start:mock": "REACT_APP_USE_MOCK=true vite --host 0.0.0.0",
    "backend:check": "curl -f http://localhost:8000/ || echo 'Backend not running'"
  },
  "proxy": "http://localhost:8000"
}

# 3. Create Vite configuration for development
# vite.config.ts
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react-swc'
import path from 'path'

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src"),
    },
  },
  server: {
    host: '0.0.0.0',
    port: 5173,
    proxy: {
      '/api': {
        target: 'http://localhost:8000',
        changeOrigin: true,
        secure: false,
        configure: (proxy, _options) => {
          proxy.on('error', (err, _req, _res) => {
            console.log('proxy error', err);
          });
          proxy.on('proxyReq', (proxyReq, req, _res) => {
            console.log('Sending Request to the Target:', req.method, req.url);
          });
          proxy.on('proxyRes', (proxyRes, req, _res) => {
            console.log('Received Response from the Target:', proxyRes.statusCode, req.url);
          });
        },
      }
    }
  },
  build: {
    outDir: 'dist',
    sourcemap: true,
    rollupOptions: {
      output: {
        manualChunks: {
          vendor: ['react', 'react-dom'],
          ui: ['@radix-ui/react-dialog', '@radix-ui/react-dropdown-menu']
        }
      }
    }
  }
})

# 4. Start the frontend development server
npm install
npm run dev

# The frontend should now be running at http://localhost:5173
# and will proxy API requests to http://localhost:8000